// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=none"
// @generated from file backend.proto (package v7.backend, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  AnalyticsProxyRequest,
  AnalyticsProxyResponse,
  CreateItemRequest,
  CreateItemResponse,
  DeleteItemRequest,
  DeleteItemResponse,
  GetItemRequest,
  GetItemResponse,
  HealthRequest,
  HealthResponse,
  ListItemsRequest,
  ListItemsResponse,
  LoginRequest,
  LoginResponse,
  LogoutRequest,
  LogoutResponse,
  StatisticsRequest,
  StatisticsResponse,
  UpdateItemRequest,
  UpdateItemResponse,
  ValidateTokenRequest,
  ValidateTokenResponse,
} from './backend_pb';
import { MethodKind } from '@bufbuild/protobuf';

/**
 * Backend gRPC 服务定义
 *
 * @generated from service v7.backend.BackendService
 */
export const BackendService = {
  typeName: 'v7.backend.BackendService',
  methods: {
    /**
     * 健康检查
     *
     * @generated from rpc v7.backend.BackendService.HealthCheck
     */
    healthCheck: {
      name: 'HealthCheck',
      I: HealthRequest,
      O: HealthResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ===== 认证服务 =====
     * 用户登录
     *
     * @generated from rpc v7.backend.BackendService.Login
     */
    login: {
      name: 'Login',
      I: LoginRequest,
      O: LoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 验证令牌
     *
     * @generated from rpc v7.backend.BackendService.ValidateToken
     */
    validateToken: {
      name: 'ValidateToken',
      I: ValidateTokenRequest,
      O: ValidateTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 用户登出
     *
     * @generated from rpc v7.backend.BackendService.Logout
     */
    logout: {
      name: 'Logout',
      I: LogoutRequest,
      O: LogoutResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ===== CRUD服务 =====
     * 创建项目
     *
     * @generated from rpc v7.backend.BackendService.CreateItem
     */
    createItem: {
      name: 'CreateItem',
      I: CreateItemRequest,
      O: CreateItemResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 获取项目
     *
     * @generated from rpc v7.backend.BackendService.GetItem
     */
    getItem: {
      name: 'GetItem',
      I: GetItemRequest,
      O: GetItemResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 更新项目
     *
     * @generated from rpc v7.backend.BackendService.UpdateItem
     */
    updateItem: {
      name: 'UpdateItem',
      I: UpdateItemRequest,
      O: UpdateItemResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 删除项目
     *
     * @generated from rpc v7.backend.BackendService.DeleteItem
     */
    deleteItem: {
      name: 'DeleteItem',
      I: DeleteItemRequest,
      O: DeleteItemResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 列出项目
     *
     * @generated from rpc v7.backend.BackendService.ListItems
     */
    listItems: {
      name: 'ListItems',
      I: ListItemsRequest,
      O: ListItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ===== 分析服务 =====
     * 分析引擎代理调用
     *
     * @generated from rpc v7.backend.BackendService.AnalyticsProxy
     */
    analyticsProxy: {
      name: 'AnalyticsProxy',
      I: AnalyticsProxyRequest,
      O: AnalyticsProxyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * MVP统计分析服务
     *
     * @generated from rpc v7.backend.BackendService.Statistics
     */
    statistics: {
      name: 'Statistics',
      I: StatisticsRequest,
      O: StatisticsResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;
