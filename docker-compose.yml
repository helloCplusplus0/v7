version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fmod-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=sqlite:./data/prod.db
      - ENABLE_PERSISTENCE=true
      - CREATE_TEST_DATA=false
    volumes:
      - backend_data:/app/data
      - ./backend/config:/app/config:ro
    networks:
      - fmod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: fmod-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - fmod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 数据库备份服务（可选）
  db-backup:
    image: alpine:latest
    container_name: fmod-db-backup
    restart: "no"
    volumes:
      - backend_data:/data:ro
      - ./backups:/backups
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        mkdir -p /backups &&
        sqlite3 /data/prod.db '.backup /backups/fmod_backup_$(date +%Y%m%d_%H%M%S).db' &&
        echo 'Database backup completed'
      "
    networks:
      - fmod-network

volumes:
  backend_data:
    driver: local

networks:
  fmod-network:
    driver: bridge 